#include <bits/stdc++.h>
using namespace std;
bool ratInMaze(char maze[10][10], int soln[10][10], int i, int j, int m, int n)
{
    // base case
    if (i == m && j == n)
    {
        soln[m][n] = 1;
        //print the path
        for (int i = 0; i <= m; i++)
        {
            for (int j = 0; j <= n; j++)
            {
                cout << soln[i][j] << " ";
            }
            cout << endl;
        }
        cout << endl;
        return true; // we found the rat
    }

    // recursive cases
    // to check the rat is in the maze
    if (i > m || j > n)
    {
        return false;
    }
    // cell should not be blocked
    if (maze[i][j] == 'X')
        return false;

    // assume solution exists through the curr cell
    soln[i][j] = 1;
    bool rightHandSuccess, leftHandSuccess;

    rightHandSuccess = ratInMaze(maze, soln, i, j + 1, m, n);
    leftHandSuccess = ratInMaze(maze, soln, i + 1, j, m, n);

    // backtracking
    soln[i][j] = 0;

    if (rightHandSuccess || leftHandSuccess)
        return true;
    return false;
}

int main()
{
    char maze[10][10] = {
        "0X00",
        "000X",
        "00X0",
        "X000",
        "XX00"

    };
    int soln[10][10] = {0};
    int m = 5, n = 4;
    bool ans = ratInMaze(maze, soln, 0, 0, m, n);
    if (ans)
        cout << "Path exist" << endl;
    else
        cout << "path doesn't exist" << endl;
}
